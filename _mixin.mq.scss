
/// ...
/// @group framework
/// @author Michael Ord
@mixin mq-between($from, $to)
{
	@if map-has-key($breakpoints, $from) and map-has-key($breakpoints, $to)
	{
		$f			:map-get($breakpoints, $from);
		$t			:map-get($breakpoints, $to);

		@media screen and (min-width: $f) and (max-width: ($t - 1)) { @content; }
	}
	@else
	{
		@warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. Please make sure it is defined in `$breakpoints` map.";
	}
}

/// ...
/// @group framework
/// @author Michael Ord
@mixin respond-to($query)
{
	@if map-has-key($breakpoints, $query)
	{
		$t			:map-get($breakpoints, $query);

		@media screen and (max-width: ($t - 1)) { @content; }
	}
	@else
	{
		@warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. Please make sure it is defined in `$breakpoints` map.";
	}
}

/// ...
/// @group framework
/// @author Michael Ord
@mixin mq-to($query)
{
	@include respond-to($query)
	{
		@content;
	}
}

/// ...
/// @group framework
/// @author Michael Ord
@mixin breakpoint($query: false)
{
	@if($query == xs)
	{
		@content;
	}
	@else if($query == false)
	{
		@content;
	}
	@else if map-has-key($breakpoints, $query)
	{
		@media screen and (min-width: #{map-get($breakpoints, $query)}) { @content; }
	}
	@else
	{
		@warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. Please make sure it is defined in `$breakpoints` map.";
	}
}

/// ...
/// @group framework
/// @author Michael Ord
@mixin mq($query)
{
	@include breakpoint($query)
	{
		@content;
	}
}

/// ...
/// @group framework
/// @author Michael Ord
@mixin retina()
{
	@media (-webkit-min-device-pixel-ratio: 1.3), (-o-min-device-pixel-ratio: 2.6 / 2), (min--moz-device-pixel-ratio: 1.3), (min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx)
	{
		@content;
	}
}

/// ...
/// @group framework
/// @author Michael Ord
@function media-query-prefix($size)
{
	@if($size == nth($the_breakpoints, 1))
	{
		$prefix 		:"";
	}
	@else
	{
		$prefix 		:"#{$size}-";
	}

	@return $prefix;
}

/// ...
/// @group framework
/// @author Michael Ord
@mixin query-layout($base, $breakpoints: $the_breakpoints)
{
	@each $size in $breakpoints
	{
		$prefix 		:media-query-prefix($size);

		@include mq($size)
		{
			.#{$prefix}#{$base}
			{
				@content;
			}
		}
	}
}
